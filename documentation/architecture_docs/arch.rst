Архитектура проекта
===================

Общие положения
---------------

.. image:: /_static/Common.jpg

Главный класс проекта - Game. У него есть ссылки на объекты трех классов, представляющие разные области проекта:
массив Scene, Space и Controller. Каждая Scene - игровая сцена (менюшка, уровень, карты неба и т. д.). Space -
класс, содержащий информацию об игровом мире. Controller - класс, обрабатывающий события клавиатуры и мыши,
запоминающий состояние клавиш и все такое.

Соответствие архитектурному замыслу в настоящее время
-----------------------------------------------------

Сейчас, по моему мнению, все, что находится в папках controller, drawable_objects и geometry, полностью соответствует
требованиям архитектуры. К тому же оно написано не очень сложно, красиво и со вкусом. По всему содержимому этих папок
здесь есть документация.

Я так и не разобрался, как работает кнопка из файла third_party/button/button.py. Она не удалена, но сейчас не
используется. Кнопка Btn, которая была в файле drawable_objects/button.py, перенесена в файл
third_party/button/button.py и также не используется. В файле drawable_objects/button.py теперь новый класс кнопки,
соответствующий архитектуре проекта. В ней элегантно сделана возможность передавать один аргумент в вызываемую по
нажатию процедуру.

Редактирование сцен пока не завершено. А FinalScene вообще не работает. Давайте завершать. Класс Game тоже недоделан.

Я значительно отредактировал класс Player, не обсудив этого с теми, кто до меня занимался его разработкой. Не злитесь,
давайте обсудим.

Информация о классах
--------------------

Написанное здесь фиксирует в основном вненшие зависимости для классов, то есть те поля и методы, которые будут
использоваться извне объектами других классов. Реализация неописанных внутренних функций класса на усмотрение
разработчика.

* class Game:
    * def __init__(window_width, window_height)
    * def create_window()
    * def main_loop()
    * def set_scene(scene_index)
    * def end()
    * running: bool  # Продолжать ли главный цикл
    * scenes: { Scene }  # Словарь сцен
